buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.github.fvarrui:javapackager:1.6.6'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}
plugins {
	id 'application'
    id 'java'
    id 'eclipse'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'io.github.fvarrui.javapackager.plugin'

// JavaFX version
javafx {
    version = "18"
    modules = [ 'javafx.base', 'javafx.graphics', 'javafx.controls', 'javafx.web', 'javafx.swing' ]
}

// Application properties
version = '1.0'
group = 'com.smsbr.desktop'
applicationName = 'SMSBackupRestore Desktop App'
description = 'Application for viewing files generated by the famous Android App "SMS Backup Restore"'
mainClassName   = 'com.smsbr.desktop.app.Launcher'
compileJava.options.encoding = 'UTF-8'

project.repositories {
    mavenCentral()
}
project.sourceSets {
    main {
        java.srcDir('src/main/java')
        resources.srcDir('src/main/resources')
    }
    test {
    	java.srcDir('src/test/java')
        resources.srcDir('src/test/resources')
    }
    functest {
    	java.srcDir('src/functest/java')
    	resources.srcDir('src/functest/resources')
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}
project.dependencies {
	implementation         group: 'commons-io',                     name: 'commons-io',             version: '2.6'
	implementation         group: 'org.apache.commons',             name: 'commons-lang3',          version: '3.9'
	implementation         group: 'com.googlecode.libphonenumber',  name: 'libphonenumber',         version: '8.12.52'
	implementation         group: 'org.jsoup',                      name: 'jsoup',                  version: '1.15.2'
	implementation         group: 'com.vdurmont',                   name: 'emoji-java',             version: '5.1.1'
	implementation 	       group: 'org.json',                       name: 'json',                   version: '20170516'
	
	testImplementation     group: 'org.junit.jupiter',              name: 'junit-jupiter',          version: '5.8.2'
	testImplementation     group: 'org.assertj',                    name: 'assertj-core',           version: '3.13.2'
	
	functestImplementation group: 'org.apache.commons',             name: 'commons-lang3',          version: '3.9'
	functestImplementation group: 'commons-io',                     name: 'commons-io',             version: '2.6'
	functestImplementation group: 'com.googlecode.libphonenumber',  name: 'libphonenumber',         version: '8.12.52'
	functestImplementation group: 'org.jsoup',                      name: 'jsoup',                  version: '1.15.2'
	functestImplementation group: 'com.vdurmont',                   name: 'emoji-java',             version: '5.1.1'
	functestImplementation group: 'org.json',                       name: 'json',                   version: '20170516'
	
	functestImplementation group: 'org.junit.jupiter',              name: 'junit-jupiter',          version: '5.8.2'
	functestImplementation group: 'org.assertj',                    name: 'assertj-core',           version: '3.13.2'
	functestImplementation group: 'org.testfx',                     name: 'testfx-core',            version: '4.0.16-alpha'
	functestImplementation group: 'org.testfx',                     name: 'testfx-junit5',          version: '4.0.16-alpha'
	functestImplementation group: 'org.hamcrest',                   name: 'hamcrest-library',       version: '2.2'
}

// Eclipse classpath workaround to add 'libphonenumber' and 'emoji-java' in the modulepath
eclipse {
    classpath {
        file {
            whenMerged {
            	def libphonenumber = entries.find { it.path.contains 'libphonenumber' }
            	libphonenumber.entryAttributes['module'] = 'true'
            	
            	def libemoji = entries.find { it.path.contains 'emoji-java' }
            	libemoji.entryAttributes['module'] = 'true'
            }
        }
    }
}

configurations {
    functestImplementation.extendsFrom implementation
    functestRuntimeOnly.extendsFrom runtimeOnly
}
// Workaround for gradle version > 7.0
processResources() {
    duplicatesStrategy = 'INCLUDE'
}
processTestResources() {
    duplicatesStrategy = 'INCLUDE'
}
processFunctestResources() {
    duplicatesStrategy = 'INCLUDE'
}
eclipse {
	project {
		natures = ['org.eclipse.jdt.core.javanature', 'org.eclipse.buildship.core.gradleprojectnature']
	}
    classpath {
        plusConfigurations += [configurations.functestCompileClasspath]
    } 
}
application {
	mainModule = 'com.smsbr.desktop'
	mainClass = 'com.smsbr.desktop.app.Launcher'
}
ant.propertyfile(file: "src/main/resources/com/smsbr/desktop/app/version.properties") {
        entry( key: "version", value: "${version}")
        entry( key: "build", value: getTimestamp())
}
def getTimestamp() {
    def date = new Date()
    return date.format('yyyyMMdd-HHmm')
}

jar {
    manifest {
        attributes 'Main-Class': 'com.smsbr.desktop.app.Launcher'
    }
    duplicatesStrategy = 'EXCLUDE'
}
test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}
task funcTest(type: Test) {
    useJUnitPlatform()
    description = "Run functional tests"
    group = "verification"
    testClassesDirs = sourceSets.functest.output.classesDirs
    classpath = sourceSets.functest.runtimeClasspath
}
task package_64bits(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    displayName = 'SMSBackupRestore - Desktop App'
    organizationName = 'Alexandre Dermont'
    organizationEmail = 'adermont.github@gmail.com'
    description = 'Application for viewing files generated by the famous Android App "SMS Backup Restore"'
    mainClass = 'com.smsbr.desktop.app.Launcher'
    licenseFile = file("${projectDir}/LICENSE.txt")
    bundleJre = true
    generateInstaller = true
    administratorRequired = false
    additionalResources = [file('NOTICE.txt'), file('RELEASE-NOTES.txt')]
    additionalModules = [ 'javafx.controls', 'javafx.web', 'javafx.swing' ]
    additionalModulePaths = [file('D:/Java/javafx-sdk-18.0.1/lib'), file('build/smsbr-desktop/libs')]
    jreMinVersion = 18
    vmArgs = ['-Xmx2048M']
    platform = 'windows'
    winConfig {
    	productVersion = 1.0
    	txtProductVersion = 1.0
    	setupLanguages = [
    		default:   'compiler:Default.isl',
    		brazilian: 'compiler:Languages\\BrazilianPortuguese.isl',
    		corsican:  'compiler:Languages\\Corsican.isl',
    		french:    'compiler:Languages\\French.isl',
    		german:    'compiler:Languages\\German.isl',
    		italian:   'compiler:Languages\\Italian.isl',
    		spanish:   'compiler:Languages\\Spanish.isl',
    	]
    	disableFinishedPage = false
    	removeOldLibs = true
    }
    linuxConfig {
    	
    }
}
